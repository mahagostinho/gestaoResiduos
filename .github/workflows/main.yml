name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment: staging or production'
        required: true
        default: 'staging'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      # Instalar a distribuição Temurin do OpenJDK
      - name: Set up Java with Temurin
        uses: actions/setup-java@v3
        with:
          java-version: '17'   # Versão que você está usando
          distribution: 'temurin'  # Distribuição Temurin

      # Instalar Maven
      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install maven -y

      # Build com Maven
      - name: Build with Maven
        run: mvn clean install

  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      # Instalar Docker e Docker Compose
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install docker.io -y
          sudo apt-get install docker-compose -y

      # Deploy para o ambiente Staging
      - name: Deploy to Staging
        run: |
          ENVIRONMENT=staging docker-compose up -d --build

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      # Instalar Docker e Docker Compose
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install docker.io -y
          sudo apt-get install docker-compose -y

      # Deploy para o ambiente Produção
      - name: Deploy to Production
        run: |
          ENVIRONMENT=production docker-compose up -d --build
