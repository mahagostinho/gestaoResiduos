name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # Distribuição Temurin

      - name: Build with Maven
        run: mvn clean install -DskipTests




  # Passo 3: Instalar Docker
       - name: Set up Docker
       run: |
         sudo apt-get update
         sudo apt-get install docker.io -y
         sudo systemctl start docker
         sudo systemctl enable docker

  # Passo 4: Instalar Docker Compose
       - name: Install Docker Compose
         run: |
           sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
           sudo chmod +x /usr/local/bin/docker-compose
           docker-compose --version # Verifica se o Docker Compose foi instalado corretamente

  # Passo 5: Rodar o Maven para gerar o JAR
       - name: Build with Maven
         run: mvn clean install -DskipTests

  # Passo 6: Construir a imagem Docker
       - name: Build Docker Image
         run: |
           docker-compose -f docker-compose.yml build

  # Passo 7: Rodar os containers Docker
       - name: Start Docker Compose
         run: |
           docker-compose -f docker-compose.yml up -d

  # Passo 8: Executar os testes dentro do contêiner Docker
       - name: Run tests inside Docker container
         run: |
           docker-compose exec app mvn test

  # Passo 9: Parar o Docker Compose após os testes
       - name: Shut down Docker Compose
         run: |
           docker-compose down